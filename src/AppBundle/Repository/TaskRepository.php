<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends EntityRepository
{
    /**
     * Get all finished tasks.
     *
     * @param int $projectId
     *   The ID of the project to get tasks for.
     *
     * @return array
     */
    public function getFinishedTasks($projectId)
    {
        $q = $this->createQueryBuilder('t')
            ->where('t.project = :projectId')
            ->andWhere('t.status = :completed')
            ->setParameter('projectId', $projectId)
            ->setParameter('completed', 'completed')
            ->getQuery();

        return $q->getResult();
    }

    /**
     * Get all due tasks.
     *
     * @param int $projectId
     *   The ID of the project to get tasks for.
     *
     * @return array
     */
    public function getDueTasks($projectId)
    {
        $q = $this->createQueryBuilder('t')
            ->where('t.project = :projectId')
            ->andWhere('t.dueDate <= :dueDate')
            ->setParameter('projectId', $projectId)
            ->setParameter('dueDate', date('Y-m-d'))
            ->getQuery();

        return $q->getResult();
    }

    /**
     * Get all new tasks.
     *
     * @param int $projectId
     *   The ID of the project to get tasks for.
     *
     * @return array
     */
    public function getNewTasks($projectId)
    {
        $q = $this->createQueryBuilder('t')
            ->where('t.project = :projectId')
            ->andWhere('t.status = :new')
            ->setParameter('projectId', $projectId)
            ->setParameter('new', 'new')
            ->getQuery();

        return $q->getResult();
    }
}
